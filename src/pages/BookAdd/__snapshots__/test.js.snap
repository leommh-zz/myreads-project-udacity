// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Component] BookAdd Display Book Component with props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BookAdd
    booksSearch={
        Array [
            Object {
              "authors": Array [
                "Leonardo Morini",
              ],
              "averageRating": 2,
              "categories": Array [
                "action",
              ],
              "description": "This book and the table",
              "shelf": "",
              "title": "Title Book",
            },
          ]
    }
    defineStatus={[Function]}
    loading={false}
    search={[Function]}
    title="test"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "alignItems": "center",
      "children": Array [
        <WithStyles(Grid)
          item={true}
>
          <ButtonBack />
</WithStyles(Grid)>,
        <WithStyles(Grid)
          item={true}
>
          <SearchInput
                    search={[Function]}
          />
</WithStyles(Grid)>,
        <WithStyles(Grid)
          item={true}
>
          <BookCase
                    books={
                              Array [
                                        Object {
                                          "authors": Array [
                                            "Leonardo Morini",
                                          ],
                                          "averageRating": 2,
                                          "categories": Array [
                                            "action",
                                          ],
                                          "description": "This book and the table",
                                          "shelf": "",
                                          "title": "Title Book",
                                        },
                                      ]
                    }
                    defineStatus={[Function]}
                    loading={false}
                    title="test"
          />
</WithStyles(Grid)>,
      ],
      "container": true,
      "direction": "column",
      "justify": "center",
      "style": Object {
        "backgroundColor": "#605872",
        "flex": 1,
        "padding": 20,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <ButtonBack />,
          "item": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <SearchInput
            search={[Function]}
/>,
          "item": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "search": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <BookCase
            books={
                        Array [
                                    Object {
                                      "authors": Array [
                                        "Leonardo Morini",
                                      ],
                                      "averageRating": 2,
                                      "categories": Array [
                                        "action",
                                      ],
                                      "description": "This book and the table",
                                      "shelf": "",
                                      "title": "Title Book",
                                    },
                                  ]
            }
            defineStatus={[Function]}
            loading={false}
            title="test"
/>,
          "item": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "books": Array [
              Object {
                "authors": Array [
                  "Leonardo Morini",
                ],
                "averageRating": 2,
                "categories": Array [
                  "action",
                ],
                "description": "This book and the table",
                "shelf": "",
                "title": "Title Book",
              },
            ],
            "defineStatus": [Function],
            "loading": false,
            "title": "test",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "alignItems": "center",
        "children": Array [
          <WithStyles(Grid)
            item={true}
>
            <ButtonBack />
</WithStyles(Grid)>,
          <WithStyles(Grid)
            item={true}
>
            <SearchInput
                        search={[Function]}
            />
</WithStyles(Grid)>,
          <WithStyles(Grid)
            item={true}
>
            <BookCase
                        books={
                                    Array [
                                                Object {
                                                  "authors": Array [
                                                    "Leonardo Morini",
                                                  ],
                                                  "averageRating": 2,
                                                  "categories": Array [
                                                    "action",
                                                  ],
                                                  "description": "This book and the table",
                                                  "shelf": "",
                                                  "title": "Title Book",
                                                },
                                              ]
                        }
                        defineStatus={[Function]}
                        loading={false}
                        title="test"
            />
</WithStyles(Grid)>,
        ],
        "container": true,
        "direction": "column",
        "justify": "center",
        "style": Object {
          "backgroundColor": "#605872",
          "flex": 1,
          "padding": 20,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <ButtonBack />,
            "item": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <SearchInput
              search={[Function]}
/>,
            "item": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "search": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <BookCase
              books={
                            Array [
                                          Object {
                                            "authors": Array [
                                              "Leonardo Morini",
                                            ],
                                            "averageRating": 2,
                                            "categories": Array [
                                              "action",
                                            ],
                                            "description": "This book and the table",
                                            "shelf": "",
                                            "title": "Title Book",
                                          },
                                        ]
              }
              defineStatus={[Function]}
              loading={false}
              title="test"
/>,
            "item": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "books": Array [
                Object {
                  "authors": Array [
                    "Leonardo Morini",
                  ],
                  "averageRating": 2,
                  "categories": Array [
                    "action",
                  ],
                  "description": "This book and the table",
                  "shelf": "",
                  "title": "Title Book",
                },
              ],
              "defineStatus": [Function],
              "loading": false,
              "title": "test",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
