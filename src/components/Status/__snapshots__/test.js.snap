// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Component] Status Display Status Component with props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Status
    book={
        Object {
            "id": 1,
            "title": "Test Book",
          }
    }
    defineStatus={[Function]}
    shelf="read"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(Typography)
          style={
                    Object {
                              "color": "#12071d",
                            }
          }
          variant="subtitle1"
>
          Status
</WithStyles(Typography)>,
        <WithStyles(Select)
          onChange={[Function]}
          value="read"
>
          <WithStyles(MenuItem)
                    value="none"
          >
                    <em>
                              None
                    </em>
          </WithStyles(MenuItem)>
          <WithStyles(MenuItem)
                    value="currentlyReading"
          >
                    Currently Reading
          </WithStyles(MenuItem)>
          <WithStyles(MenuItem)
                    value="wantToRead"
          >
                    Want to Read
          </WithStyles(MenuItem)>
          <WithStyles(MenuItem)
                    value="read"
          >
                    Read
          </WithStyles(MenuItem)>
</WithStyles(Select)>,
      ],
      "style": Object {
        "backgroundColor": "#c8a3ff",
        "padding": 15,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Status",
          "style": Object {
            "color": "#12071d",
          },
          "variant": "subtitle1",
        },
        "ref": null,
        "rendered": "Status",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(MenuItem)
              value="none"
>
              <em>
                            None
              </em>
</WithStyles(MenuItem)>,
            <WithStyles(MenuItem)
              value="currentlyReading"
>
              Currently Reading
</WithStyles(MenuItem)>,
            <WithStyles(MenuItem)
              value="wantToRead"
>
              Want to Read
</WithStyles(MenuItem)>,
            <WithStyles(MenuItem)
              value="read"
>
              Read
</WithStyles(MenuItem)>,
          ],
          "onChange": [Function],
          "value": "read",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <em>
                None
</em>,
              "value": "none",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "None",
              },
              "ref": null,
              "rendered": "None",
              "type": "em",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Currently Reading",
              "value": "currentlyReading",
            },
            "ref": null,
            "rendered": "Currently Reading",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Want to Read",
              "value": "wantToRead",
            },
            "ref": null,
            "rendered": "Want to Read",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Read",
              "value": "read",
            },
            "ref": null,
            "rendered": "Read",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Typography)
            style={
                        Object {
                                    "color": "#12071d",
                                  }
            }
            variant="subtitle1"
>
            Status
</WithStyles(Typography)>,
          <WithStyles(Select)
            onChange={[Function]}
            value="read"
>
            <WithStyles(MenuItem)
                        value="none"
            >
                        <em>
                                    None
                        </em>
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
                        value="currentlyReading"
            >
                        Currently Reading
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
                        value="wantToRead"
            >
                        Want to Read
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
                        value="read"
            >
                        Read
            </WithStyles(MenuItem)>
</WithStyles(Select)>,
        ],
        "style": Object {
          "backgroundColor": "#c8a3ff",
          "padding": 15,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Status",
            "style": Object {
              "color": "#12071d",
            },
            "variant": "subtitle1",
          },
          "ref": null,
          "rendered": "Status",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(MenuItem)
                value="none"
>
                <em>
                                None
                </em>
</WithStyles(MenuItem)>,
              <WithStyles(MenuItem)
                value="currentlyReading"
>
                Currently Reading
</WithStyles(MenuItem)>,
              <WithStyles(MenuItem)
                value="wantToRead"
>
                Want to Read
</WithStyles(MenuItem)>,
              <WithStyles(MenuItem)
                value="read"
>
                Read
</WithStyles(MenuItem)>,
            ],
            "onChange": [Function],
            "value": "read",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <em>
                  None
</em>,
                "value": "none",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "None",
                },
                "ref": null,
                "rendered": "None",
                "type": "em",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Currently Reading",
                "value": "currentlyReading",
              },
              "ref": null,
              "rendered": "Currently Reading",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Want to Read",
                "value": "wantToRead",
              },
              "ref": null,
              "rendered": "Want to Read",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Read",
                "value": "read",
              },
              "ref": null,
              "rendered": "Read",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
