// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Component] MultiChips Display MultiChips Component with props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MultiChips
    items={
        Array [
            "item1",
            "item2",
          ]
    }
    name="title1"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <WithStyles(Grid)
        container={true}
        item={true}
>
        <WithStyles(Typography)
                style={
                        Object {
                                "color": "#c8a3ff",
                              }
                }
                variant="subtitle1"
        >
                title1
        </WithStyles(Typography)>
        <Unknown
                Style={
                        Object {
                                "chip": Object {
                                  "background": "#bfd3ff",
                                },
                                "typography": Object {
                                  "color": "#c8a3ff",
                                },
                              }
                }
                items={
                        Array [
                                "item1",
                                "item2",
                              ]
                }
        />
</WithStyles(Grid)>,
      "test": Array [
        "item1",
        "item2",
      ],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Typography)
            style={
                        Object {
                                    "color": "#c8a3ff",
                                  }
            }
            variant="subtitle1"
>
            title1
</WithStyles(Typography)>,
          <Unknown
            Style={
                        Object {
                                    "chip": Object {
                                      "background": "#bfd3ff",
                                    },
                                    "typography": Object {
                                      "color": "#c8a3ff",
                                    },
                                  }
            }
            items={
                        Array [
                                    "item1",
                                    "item2",
                                  ]
            }
/>,
        ],
        "container": true,
        "item": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "title1",
            "style": Object {
              "color": "#c8a3ff",
            },
            "variant": "subtitle1",
          },
          "ref": null,
          "rendered": "title1",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "Style": Object {
              "chip": Object {
                "background": "#bfd3ff",
              },
              "typography": Object {
                "color": "#c8a3ff",
              },
            },
            "items": Array [
              "item1",
              "item2",
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <WithStyles(Grid)
          container={true}
          item={true}
>
          <WithStyles(Typography)
                    style={
                              Object {
                                        "color": "#c8a3ff",
                                      }
                    }
                    variant="subtitle1"
          >
                    title1
          </WithStyles(Typography)>
          <Unknown
                    Style={
                              Object {
                                        "chip": Object {
                                          "background": "#bfd3ff",
                                        },
                                        "typography": Object {
                                          "color": "#c8a3ff",
                                        },
                                      }
                    }
                    items={
                              Array [
                                        "item1",
                                        "item2",
                                      ]
                    }
          />
</WithStyles(Grid)>,
        "test": Array [
          "item1",
          "item2",
        ],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              style={
                            Object {
                                          "color": "#c8a3ff",
                                        }
              }
              variant="subtitle1"
>
              title1
</WithStyles(Typography)>,
            <Unknown
              Style={
                            Object {
                                          "chip": Object {
                                            "background": "#bfd3ff",
                                          },
                                          "typography": Object {
                                            "color": "#c8a3ff",
                                          },
                                        }
              }
              items={
                            Array [
                                          "item1",
                                          "item2",
                                        ]
              }
/>,
          ],
          "container": true,
          "item": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "title1",
              "style": Object {
                "color": "#c8a3ff",
              },
              "variant": "subtitle1",
            },
            "ref": null,
            "rendered": "title1",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "Style": Object {
                "chip": Object {
                  "background": "#bfd3ff",
                },
                "typography": Object {
                  "color": "#c8a3ff",
                },
              },
              "items": Array [
                "item1",
                "item2",
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
